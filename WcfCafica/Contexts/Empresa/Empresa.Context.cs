//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfCafica.Contexts.Empresa
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Common;
    
    public partial class EmpresaContext : DbContext
    {
        public EmpresaContext()
            : base(GetConnectionString())
        {
    		this.Configuration.LazyLoadingEnabled = false;
    		this.Configuration.ProxyCreationEnabled = false;
    		}
        public EmpresaContext(string user, string password, string bd)
            : base(GetConnectionString(user,password,bd))
        {
    		this.Configuration.LazyLoadingEnabled = false;
    		this.Configuration.ProxyCreationEnabled = false;
    		}
    	public EmpresaContext(DbConnection existingConnection, bool contextOwnsConnection)
             : base(existingConnection, contextOwnsConnection) 
        {
    		this.Configuration.LazyLoadingEnabled = false;
    		this.Configuration.ProxyCreationEnabled = false;
    		}
       public static string GetConnectionString()
       {
            PasswordEncrypt encriptacion = new PasswordEncrypt();
            ValidarToken Token = new ValidarToken();
    
            //Obtiene el nombre usuario desde el token de la conexion
            string user = Token.getKey("user", "Token");
    
            //Obtiene el password a la bd 
            string password = encriptacion.DecryptText(Token.getKey("password", "Token"));
    
            //Obtiene la bd de la empresa del token empresa
            string bd = Token.getKey("bd", "TokenEmpresa");
    
            string servidor;
            if (System.Diagnostics.Debugger.IsAttached)
                servidor = "10.10.1.72";
            else
                servidor = "10.10.1.170";
    
    
            // Server=localhost;Database={0};Uid=username;Pwd=password
            //var connString = ConfigurationManager.ConnectionStrings["UsuariosContext"].ConnectionString.ToString();
            string connString = "metadata=res://*/Contexts.Empresa.Empresa.csdl|res://*/Contexts.Empresa.Empresa.ssdl|res://*/Contexts.Empresa.Empresa.msl;provider=MySql.Data.MySqlClient;provider connection string=\"server={3};user id={0};password={1};database={2}\"";
            return String.Format(connString, user, password,bd,servidor);
        }
    	public static string GetConnectionString(string user, string password, string bd)
        {
            PasswordEncrypt encriptacion = new PasswordEncrypt();
            ValidarToken Token = new ValidarToken();
    
            //Obtiene el password a la bd 
            password = encriptacion.DecryptText(password);
    
    		//Obtiene el nombre de la bd 
            bd = encriptacion.DecryptText(bd);
    
            string servidor;
            if (System.Diagnostics.Debugger.IsAttached)
                servidor = "10.10.1.72";
            else
                servidor = "10.10.1.170";
    
    
            // Server=localhost;Database={0};Uid=username;Pwd=password
            //var connString = ConfigurationManager.ConnectionStrings["UsuariosContext"].ConnectionString.ToString();
            string connString = "metadata=res://*/Contexts.Empresa.Empresa.csdl|res://*/Contexts.Empresa.Empresa.ssdl|res://*/Contexts.Empresa.Empresa.msl;provider=MySql.Data.MySqlClient;provider connection string=\"server={3};user id={0};password={1};database={2}\"";
            return String.Format(connString, user, password, bd, servidor);
        }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Almacenes> Almacenes { get; set; }
        public virtual DbSet<AlmacenesGruposComponentes> AlmacenesGruposComponentes { get; set; }
        public virtual DbSet<Areas> Areas { get; set; }
        public virtual DbSet<CentrosCanjeMonedero> CentrosCanjeMonedero { get; set; }
        public virtual DbSet<CentrosCanjeUsuariosMonedero> CentrosCanjeUsuariosMonedero { get; set; }
        public virtual DbSet<Ciudades> Ciudades { get; set; }
        public virtual DbSet<CodigosISOMonedas> CodigosISOMonedas { get; set; }
        public virtual DbSet<CodigosPostales> CodigosPostales { get; set; }
        public virtual DbSet<Colonias> Colonias { get; set; }
        public virtual DbSet<Componentes> Componentes { get; set; }
        public virtual DbSet<ComponentesAlmacenes> ComponentesAlmacenes { get; set; }
        public virtual DbSet<ComponentesCodigosBarras> ComponentesCodigosBarras { get; set; }
        public virtual DbSet<ComponentesEquivalenciasPartes> ComponentesEquivalenciasPartes { get; set; }
        public virtual DbSet<ComponentesFormula> ComponentesFormula { get; set; }
        public virtual DbSet<ComponentesFormulaDetalles> ComponentesFormulaDetalles { get; set; }
        public virtual DbSet<ComponentesImagenes> ComponentesImagenes { get; set; }
        public virtual DbSet<ComponentesImpuestos> ComponentesImpuestos { get; set; }
        public virtual DbSet<ComprasDocs> ComprasDocs { get; set; }
        public virtual DbSet<ComprasDocsImpuestos> ComprasDocsImpuestos { get; set; }
        public virtual DbSet<ComprasDocsLotesSeries> ComprasDocsLotesSeries { get; set; }
        public virtual DbSet<ComprasDocsRelaciones> ComprasDocsRelaciones { get; set; }
        public virtual DbSet<ComprasDocsRelacionesDetalles> ComprasDocsRelacionesDetalles { get; set; }
        public virtual DbSet<ConceptosES> ConceptosES { get; set; }
        public virtual DbSet<CondicionesPago> CondicionesPago { get; set; }
        public virtual DbSet<CondicionesPagoPlazos> CondicionesPagoPlazos { get; set; }
        public virtual DbSet<Departamentos> Departamentos { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<ExistenciasLotesSeries> ExistenciasLotesSeries { get; set; }
        public virtual DbSet<Giros> Giros { get; set; }
        public virtual DbSet<GrupoProveedores> GrupoProveedores { get; set; }
        public virtual DbSet<GruposComponentes> GruposComponentes { get; set; }
        public virtual DbSet<GruposUnidades> GruposUnidades { get; set; }
        public virtual DbSet<GruposUnidadesDetalle> GruposUnidadesDetalle { get; set; }
        public virtual DbSet<Impuestos> Impuestos { get; set; }
        public virtual DbSet<ImpuestosGravados> ImpuestosGravados { get; set; }
        public virtual DbSet<InventariosCostos> InventariosCostos { get; set; }
        public virtual DbSet<InventariosES> InventariosES { get; set; }
        public virtual DbSet<InventariosESDetalles> InventariosESDetalles { get; set; }
        public virtual DbSet<InventariosESLotesSeries> InventariosESLotesSeries { get; set; }
        public virtual DbSet<InventariosFisicos> InventariosFisicos { get; set; }
        public virtual DbSet<InventariosFisicosDetalles> InventariosFisicosDetalles { get; set; }
        public virtual DbSet<InventariosFisicosLotesSeries> InventariosFisicosLotesSeries { get; set; }
        public virtual DbSet<InventariosSaldos> InventariosSaldos { get; set; }
        public virtual DbSet<LotesSeries> LotesSeries { get; set; }
        public virtual DbSet<MarcasComponentes> MarcasComponentes { get; set; }
        public virtual DbSet<ModulosRelaciones> ModulosRelaciones { get; set; }
        public virtual DbSet<Monedas> Monedas { get; set; }
        public virtual DbSet<Municipios> Municipios { get; set; }
        public virtual DbSet<Paises> Paises { get; set; }
        public virtual DbSet<PremiosMonederoDetalles> PremiosMonederoDetalles { get; set; }
        public virtual DbSet<Proveedores> Proveedores { get; set; }
        public virtual DbSet<ProveedoresContactos> ProveedoresContactos { get; set; }
        public virtual DbSet<ProveedoresDirecciones> ProveedoresDirecciones { get; set; }
        public virtual DbSet<Puestos> Puestos { get; set; }
        public virtual DbSet<Resguardos> Resguardos { get; set; }
        public virtual DbSet<ResguardosDetalles> ResguardosDetalles { get; set; }
        public virtual DbSet<ResguardosLotesSeries> ResguardosLotesSeries { get; set; }
        public virtual DbSet<Responsables> Responsables { get; set; }
        public virtual DbSet<SubgruposComponentes> SubgruposComponentes { get; set; }
        public virtual DbSet<TiposCambio> TiposCambio { get; set; }
        public virtual DbSet<TiposComponentes> TiposComponentes { get; set; }
        public virtual DbSet<TiposDocumentos> TiposDocumentos { get; set; }
        public virtual DbSet<TokensMonedero> TokensMonedero { get; set; }
        public virtual DbSet<Unidades> Unidades { get; set; }
        public virtual DbSet<UsuariosMonedero> UsuariosMonedero { get; set; }
        public virtual DbSet<ComprasDocsDetalles> ComprasDocsDetalles { get; set; }
        public virtual DbSet<ConfiguracionMonedero> ConfiguracionMonedero { get; set; }
        public virtual DbSet<MovimientosMonederoDetalles> MovimientosMonederoDetalles { get; set; }
        public virtual DbSet<PremiosMonedero> PremiosMonedero { get; set; }
        public virtual DbSet<SaldosMonedero> SaldosMonedero { get; set; }
        public virtual DbSet<SociosMonedero> SociosMonedero { get; set; }
        public virtual DbSet<SolicitudesCanjeMonedero> SolicitudesCanjeMonedero { get; set; }
        public virtual DbSet<SolicitudesCanjeMonederoDetalles> SolicitudesCanjeMonederoDetalles { get; set; }
        public virtual DbSet<MovimientosMonedero> MovimientosMonedero { get; set; }
    }
}
